--Task 1
-- TOUR (TOURNAME, DESCRIPTION)
-- PRIMARY KEY (TOURNAME)

-- EVENT (EVENTYEAR, EVENTMONTH, EVENT DAY, FEE)
-- PRIMARY KEY (VENTYEAR, EVENTMONTH, EVENTDAY)
-- FOREIGN KEY (TOURNAME) REFERENCES TOUR

-- BOOKING (DATEBOOKED, PAYMENT)
-- FOREIGN KEY (EVENTYEAR, EVENTMONTH, EVENTDAY) REFERENCES EVENT
-- FOREIGN KEY (CLIENTID) REFERENCES CLIENT
-- FOREIGN KEY (TOURNAME) REFERENCES TOUR

-- CLIENT (CLIENTID, SURNAME, GIVENNAME, GENDER)
-- PRIMARY KEY (CLIENTID)
DROP TABLE TOUR5009;
DROP TABLE BOOKING5009
DROP TABLE EVENT509
DROP TABLE CLIENT5009

CREATE DATABASE AT15009999

use AT15009999

CREATE TABLE TOUR5009 (
  TOURNAME   NVARCHAR(100) 
, DESCRIOTION   NVARCHAR(500) 
, PRIMARY KEY  (TOURNAME) 
);

CREATE TABLE EVENT5009 (
  EVENTYEAR       INT
, EVENTMONTH       NVARCHAR (3)
, EVENTDAY      INT
, FEE      MONEY
, TOURNAME   NVARCHAR (100)
, PRIMARY KEY (EVENTYEAR, EVENTMONTH, EVENTDAY, TOURNAME)
, FOREIGN KEY (TOURNAME) REFERENCES TOUR5009
);

CREATE TABLE BOOKING5009 (
  DATEBOOKED    DATE
, PAYMENT   MONEY
, CLIENTID  INT
, EVENTYEAR   INT
, EVENTMONTH     NVARCHAR (3)
, EVENTDAY  INT
, TOURNAME   NVARCHAR(100)
, PRIMARY KEY (EVENTYEAR, EVENTMONTH, EVENTDAY, TOURNAME, CLIENTID)
, FOREIGN KEY (CLIENTID) references CLIENT5009
, FOREIGN KEY (EVENTYEAR, EVENTMONTH, EVENTDAY, TOURNAME) REFERENCES EVENT5009



);

CREATE TABLE CLIENT5009 (
  CLIENTID  INT
, SURNAME NVARCHAR (100)
, GIVENNAME NVARCHAR (100)
, GENDER VARCHAR(1)
, PRIMARY KEY (CLIENTID)

);

SELECT * FROM CLIENT5009
SELECT * FROM BOOKING5009
SELECT * FROM EVENT5009
SELECT * FROM TOUR5009


INSERT INTO TOUR5009 (TOURNAME, DESCRIOTION) VALUES 
('North',	'Tour of wineries and outlets of the Bedigo and Castlemaine region'),
('South',	'Tour of wineries and outlets of Mornington Penisula'),
('West',	'Tour of wineries and outlets of the Geelong and Otways region');


INSERT INTO EVENT5009 (TOURNAME, EVENTMONTH, EVENTDAY, EVENTYEAR, FEE) VALUES 
('North',	'Jan',	9,	2016,	200),
('North',	'Feb',	13,	2016,	225),
('South',	'Jan',	9,	2016,	200),
('South',	'Jan',	16,	2016,	200),
('West',	'Jan',	29,	2016,	225);


INSERT INTO BOOKING5009 (CLIENTID, TOURNAME, EVENTMONTH, EVENTDAY, EVENTYEAR, PAYMENT, DATEBOOKED) VALUES 
(1,	'North',	'Jan',	9,	2016,	200,	'2015-10-12'),
(2,	'North',	'Jan',	9,	2016,	200,	 '2015-12-16'),
(1,	'North',	'Feb',	13,	2016,	225,	'2015-01-08'),
(2,	'North',	'Feb',	13,	2016,	125,	'2016-01-14'),
(3,	'North',	'Feb',	13,	2016,	225,	'2016-02-03'),
(1,	'South',	'Jan',	9,	2016,	200,	'2015-12-10'),
(2,	'South',	'Jan',	16,	2016,	200,	'2015-12-18'),
(3,	'South',	'Jan',	16,	2016,	200,	'2016-01-09'),
(2,	'West',	'Jan',	29,	2016,	225,	'2015-12-17'),
(3,	'West',	'Jan',	29,	2016,	200,	'2015-12-18');


INSERT INTO CLIENT5009 (CLIENTID, SURNAME, GIVENNAME, GENDER) VALUES 
(1,	'Price',	'Taylor',	'M'),
(2,	'Gamble',	'Ellyse',	'F'),
(3,	'Tan',	'Tilly',	'F');


INSERT INTO CLIENT5009 (CLIENTID, SURNAME, GIVENNAME, GENDER) VALUES 
(4,	'Barrah',	'Max',	'M');



SELECT C.GIVENNAME, C.SURNAME, T.TOURNAME, T.DESCRIOTION, B.EVENTYEAR, B.EVENTMONTH, B.EVENTDAY, B.PAYMENT, B.DATEBOOKED
FROM TOUR5009 T
INNER JOIN BOOKING5009 B
ON T.TOURNAME = B.TOURNAME
INNER JOIN CLIENT5009 C
ON C.CLIENTID = B.CLIENTID
GROUP BY T.TOURNAME, GIVENNAME, SURNAME, DESCRIOTION, EVENTYEAR, EVENTMONTH,EVENTDAY,PAYMENT, DATEBOOKED


SELECT EVENTMONTH, TOURNAME, COUNT(DATEBOOKED) AS NUMOFBOOKINGS
FROM BOOKING5009
GROUP BY EVENTMONTH, TOURNAME


SELECT * FROM BOOKING5009
 WHERE PAYMENT > (SELECT AVG(PAYMENT) FROM BOOKING5009);





 



























































